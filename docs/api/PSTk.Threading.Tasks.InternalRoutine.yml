### YamlMime:ManagedReference
items:
- uid: PSTk.Threading.Tasks.InternalRoutine
  commentId: T:PSTk.Threading.Tasks.InternalRoutine
  id: InternalRoutine
  parent: PSTk.Threading.Tasks
  children:
  - PSTk.Threading.Tasks.InternalRoutine.#ctor(System.Int32,System.Action)
  - PSTk.Threading.Tasks.InternalRoutine.#ctor(System.Int32,System.Action{System.Int32},System.Action{System.String})
  - PSTk.Threading.Tasks.InternalRoutine.AttachToParent(System.Threading.CancellationToken)
  - PSTk.Threading.Tasks.InternalRoutine.OnDeltaVariation
  - PSTk.Threading.Tasks.InternalRoutine.OnFinished
  - PSTk.Threading.Tasks.InternalRoutine.OnInitialized
  - PSTk.Threading.Tasks.InternalRoutine.OnInitializing
  - PSTk.Threading.Tasks.InternalRoutine.Start
  - PSTk.Threading.Tasks.InternalRoutine.Token
  langs:
  - csharp
  - vb
  name: InternalRoutine
  nameWithType: InternalRoutine
  fullName: PSTk.Threading.Tasks.InternalRoutine
  type: Class
  source:
    remote:
      path: PSTk.Threading/Tasks/InternalRoutine.cs
      branch: master
      repo: https://github.com/Devwarlt/pstk-core.git
    id: InternalRoutine
    path: ../PSTk.Threading/Tasks/InternalRoutine.cs
    startLine: 13
  assemblies:
  - PSTk.Threading
  namespace: PSTk.Threading.Tasks
  summary: "\nUsed for synchronous or asynchronous routine.\n"
  example: []
  syntax:
    content: 'public sealed class InternalRoutine : IAttachedTask'
    content.vb: >-
      Public NotInheritable Class InternalRoutine

          Implements IAttachedTask
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
  inheritance:
  - System.Object
  implements:
  - PSTk.Threading.Tasks.Procedures.IAttachedTask
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: PSTk.Threading.Tasks.InternalRoutine.#ctor(System.Int32,System.Action)
  commentId: M:PSTk.Threading.Tasks.InternalRoutine.#ctor(System.Int32,System.Action)
  id: '#ctor(System.Int32,System.Action)'
  parent: PSTk.Threading.Tasks.InternalRoutine
  langs:
  - csharp
  - vb
  name: InternalRoutine(Int32, Action)
  nameWithType: InternalRoutine.InternalRoutine(Int32, Action)
  fullName: PSTk.Threading.Tasks.InternalRoutine.InternalRoutine(System.Int32, System.Action)
  type: Constructor
  source:
    remote:
      path: PSTk.Threading/Tasks/InternalRoutine.cs
      branch: master
      repo: https://github.com/Devwarlt/pstk-core.git
    id: .ctor
    path: ../PSTk.Threading/Tasks/InternalRoutine.cs
    startLine: 28
  assemblies:
  - PSTk.Threading
  namespace: PSTk.Threading.Tasks
  summary: "\nCreate a new instance of <xref href=\"PSTk.Threading.Tasks.InternalRoutine\" data-throw-if-not-resolved=\"false\"></xref>. This is a lightweight version.\n"
  example: []
  syntax:
    content: public InternalRoutine(int timeout, Action routine)
    parameters:
    - id: timeout
      type: System.Int32
      description: ''
    - id: routine
      type: System.Action
      description: ''
    content.vb: Public Sub New(timeout As Integer, routine As Action)
  overload: PSTk.Threading.Tasks.InternalRoutine.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PSTk.Threading.Tasks.InternalRoutine.#ctor(System.Int32,System.Action{System.Int32},System.Action{System.String})
  commentId: M:PSTk.Threading.Tasks.InternalRoutine.#ctor(System.Int32,System.Action{System.Int32},System.Action{System.String})
  id: '#ctor(System.Int32,System.Action{System.Int32},System.Action{System.String})'
  parent: PSTk.Threading.Tasks.InternalRoutine
  langs:
  - csharp
  - vb
  name: InternalRoutine(Int32, Action<Int32>, Action<String>)
  nameWithType: InternalRoutine.InternalRoutine(Int32, Action<Int32>, Action<String>)
  fullName: PSTk.Threading.Tasks.InternalRoutine.InternalRoutine(System.Int32, System.Action<System.Int32>, System.Action<System.String>)
  type: Constructor
  source:
    remote:
      path: PSTk.Threading/Tasks/InternalRoutine.cs
      branch: master
      repo: https://github.com/Devwarlt/pstk-core.git
    id: .ctor
    path: ../PSTk.Threading/Tasks/InternalRoutine.cs
    startLine: 37
  assemblies:
  - PSTk.Threading
  namespace: PSTk.Threading.Tasks
  summary: "\nCreate a new instance of <xref href=\"PSTk.Threading.Tasks.InternalRoutine\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public InternalRoutine(int timeout, Action<int> routine, Action<string> errorLogger = null)
    parameters:
    - id: timeout
      type: System.Int32
      description: ''
    - id: routine
      type: System.Action{System.Int32}
      description: ''
    - id: errorLogger
      type: System.Action{System.String}
      description: ''
    content.vb: Public Sub New(timeout As Integer, routine As Action(Of Integer), errorLogger As Action(Of String) = Nothing)
  overload: PSTk.Threading.Tasks.InternalRoutine.#ctor*
  nameWithType.vb: InternalRoutine.InternalRoutine(Int32, Action(Of Int32), Action(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PSTk.Threading.Tasks.InternalRoutine.InternalRoutine(System.Int32, System.Action(Of System.Int32), System.Action(Of System.String))
  name.vb: InternalRoutine(Int32, Action(Of Int32), Action(Of String))
- uid: PSTk.Threading.Tasks.InternalRoutine.OnDeltaVariation
  commentId: E:PSTk.Threading.Tasks.InternalRoutine.OnDeltaVariation
  id: OnDeltaVariation
  parent: PSTk.Threading.Tasks.InternalRoutine
  langs:
  - csharp
  - vb
  name: OnDeltaVariation
  nameWithType: InternalRoutine.OnDeltaVariation
  fullName: PSTk.Threading.Tasks.InternalRoutine.OnDeltaVariation
  type: Event
  source:
    remote:
      path: PSTk.Threading/Tasks/InternalRoutine.cs
      branch: master
      repo: https://github.com/Devwarlt/pstk-core.git
    id: OnDeltaVariation
    path: ../PSTk.Threading/Tasks/InternalRoutine.cs
    startLine: 60
  assemblies:
  - PSTk.Threading
  namespace: PSTk.Threading.Tasks
  summary: "\nWhen routine <xref href=\"PSTk.Threading.Tasks.InternalRoutine.timeout\" data-throw-if-not-resolved=\"false\"></xref> takes more time than usual to execute.\n"
  example: []
  syntax:
    content: public event EventHandler<InternalRoutineEventArgs> OnDeltaVariation
    return:
      type: System.EventHandler{PSTk.Threading.Tasks.InternalRoutineEventArgs}
    content.vb: Public Event OnDeltaVariation As EventHandler(Of InternalRoutineEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PSTk.Threading.Tasks.InternalRoutine.OnFinished
  commentId: E:PSTk.Threading.Tasks.InternalRoutine.OnFinished
  id: OnFinished
  parent: PSTk.Threading.Tasks.InternalRoutine
  langs:
  - csharp
  - vb
  name: OnFinished
  nameWithType: InternalRoutine.OnFinished
  fullName: PSTk.Threading.Tasks.InternalRoutine.OnFinished
  type: Event
  source:
    remote:
      path: PSTk.Threading/Tasks/InternalRoutine.cs
      branch: master
      repo: https://github.com/Devwarlt/pstk-core.git
    id: OnFinished
    path: ../PSTk.Threading/Tasks/InternalRoutine.cs
    startLine: 65
  assemblies:
  - PSTk.Threading
  namespace: PSTk.Threading.Tasks
  summary: "\nWhen routine finished its task.\n"
  example: []
  syntax:
    content: public event EventHandler OnFinished
    return:
      type: System.EventHandler
    content.vb: Public Event OnFinished As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PSTk.Threading.Tasks.InternalRoutine.OnInitialized
  commentId: E:PSTk.Threading.Tasks.InternalRoutine.OnInitialized
  id: OnInitialized
  parent: PSTk.Threading.Tasks.InternalRoutine
  langs:
  - csharp
  - vb
  name: OnInitialized
  nameWithType: InternalRoutine.OnInitialized
  fullName: PSTk.Threading.Tasks.InternalRoutine.OnInitialized
  type: Event
  source:
    remote:
      path: PSTk.Threading/Tasks/InternalRoutine.cs
      branch: master
      repo: https://github.com/Devwarlt/pstk-core.git
    id: OnInitialized
    path: ../PSTk.Threading/Tasks/InternalRoutine.cs
    startLine: 70
  assemblies:
  - PSTk.Threading
  namespace: PSTk.Threading.Tasks
  summary: "\nWhen routine is already initialized.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Not supported feature since version 3.4.2.", true)]

      public event EventHandler OnInitialized
    return:
      type: System.EventHandler
    content.vb: >-
      <Obsolete("Not supported feature since version 3.4.2.", True)>

      Public Event OnInitialized As EventHandler
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Not supported feature since version 3.4.2.
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PSTk.Threading.Tasks.InternalRoutine.OnInitializing
  commentId: E:PSTk.Threading.Tasks.InternalRoutine.OnInitializing
  id: OnInitializing
  parent: PSTk.Threading.Tasks.InternalRoutine
  langs:
  - csharp
  - vb
  name: OnInitializing
  nameWithType: InternalRoutine.OnInitializing
  fullName: PSTk.Threading.Tasks.InternalRoutine.OnInitializing
  type: Event
  source:
    remote:
      path: PSTk.Threading/Tasks/InternalRoutine.cs
      branch: master
      repo: https://github.com/Devwarlt/pstk-core.git
    id: OnInitializing
    path: ../PSTk.Threading/Tasks/InternalRoutine.cs
    startLine: 75
  assemblies:
  - PSTk.Threading
  namespace: PSTk.Threading.Tasks
  summary: "\nWhen routine is preparing to initialize.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Not supported feature since version 3.4.2.", true)]

      public event EventHandler OnInitializing
    return:
      type: System.EventHandler
    content.vb: >-
      <Obsolete("Not supported feature since version 3.4.2.", True)>

      Public Event OnInitializing As EventHandler
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Not supported feature since version 3.4.2.
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PSTk.Threading.Tasks.InternalRoutine.Token
  commentId: P:PSTk.Threading.Tasks.InternalRoutine.Token
  id: Token
  parent: PSTk.Threading.Tasks.InternalRoutine
  langs:
  - csharp
  - vb
  name: Token
  nameWithType: InternalRoutine.Token
  fullName: PSTk.Threading.Tasks.InternalRoutine.Token
  type: Property
  source:
    remote:
      path: PSTk.Threading/Tasks/InternalRoutine.cs
      branch: master
      repo: https://github.com/Devwarlt/pstk-core.git
    id: Token
    path: ../PSTk.Threading/Tasks/InternalRoutine.cs
    startLine: 82
  assemblies:
  - PSTk.Threading
  namespace: PSTk.Threading.Tasks
  summary: "\nGet the <xref href=\"System.Threading.CancellationToken\" data-throw-if-not-resolved=\"false\"></xref> of attached task.\n"
  example: []
  syntax:
    content: public CancellationToken Token { get; }
    parameters: []
    return:
      type: System.Threading.CancellationToken
    content.vb: Public ReadOnly Property Token As CancellationToken
  overload: PSTk.Threading.Tasks.InternalRoutine.Token*
  implements:
  - PSTk.Threading.Tasks.Procedures.IAttachedTask.Token
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PSTk.Threading.Tasks.InternalRoutine.AttachToParent(System.Threading.CancellationToken)
  commentId: M:PSTk.Threading.Tasks.InternalRoutine.AttachToParent(System.Threading.CancellationToken)
  id: AttachToParent(System.Threading.CancellationToken)
  parent: PSTk.Threading.Tasks.InternalRoutine
  langs:
  - csharp
  - vb
  name: AttachToParent(CancellationToken)
  nameWithType: InternalRoutine.AttachToParent(CancellationToken)
  fullName: PSTk.Threading.Tasks.InternalRoutine.AttachToParent(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: PSTk.Threading/Tasks/InternalRoutine.cs
      branch: master
      repo: https://github.com/Devwarlt/pstk-core.git
    id: AttachToParent
    path: ../PSTk.Threading/Tasks/InternalRoutine.cs
    startLine: 88
  assemblies:
  - PSTk.Threading
  namespace: PSTk.Threading.Tasks
  summary: "\nAttach a process to parent in case of external task cancellation request.\n"
  example: []
  syntax:
    content: public void AttachToParent(CancellationToken token)
    parameters:
    - id: token
      type: System.Threading.CancellationToken
      description: ''
    content.vb: Public Sub AttachToParent(token As CancellationToken)
  overload: PSTk.Threading.Tasks.InternalRoutine.AttachToParent*
  implements:
  - PSTk.Threading.Tasks.Procedures.IAttachedTask.AttachToParent(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PSTk.Threading.Tasks.InternalRoutine.Start
  commentId: M:PSTk.Threading.Tasks.InternalRoutine.Start
  id: Start
  parent: PSTk.Threading.Tasks.InternalRoutine
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: InternalRoutine.Start()
  fullName: PSTk.Threading.Tasks.InternalRoutine.Start()
  type: Method
  source:
    remote:
      path: PSTk.Threading/Tasks/InternalRoutine.cs
      branch: master
      repo: https://github.com/Devwarlt/pstk-core.git
    id: Start
    path: ../PSTk.Threading/Tasks/InternalRoutine.cs
    startLine: 93
  assemblies:
  - PSTk.Threading
  namespace: PSTk.Threading.Tasks
  summary: "\nInitialize and starts the core routine, to stop it must use <xref href=\"System.Threading.CancellationTokenSource.Cancel(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: PSTk.Threading.Tasks.InternalRoutine.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.OperationCanceledException
  commentId: T:System.OperationCanceledException
  isExternal: true
- uid: PSTk.Threading.Tasks
  commentId: N:PSTk.Threading.Tasks
  name: PSTk.Threading.Tasks
  nameWithType: PSTk.Threading.Tasks
  fullName: PSTk.Threading.Tasks
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PSTk.Threading.Tasks.Procedures.IAttachedTask
  commentId: T:PSTk.Threading.Tasks.Procedures.IAttachedTask
  parent: PSTk.Threading.Tasks.Procedures
  name: IAttachedTask
  nameWithType: IAttachedTask
  fullName: PSTk.Threading.Tasks.Procedures.IAttachedTask
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: PSTk.Threading.Tasks.Procedures
  commentId: N:PSTk.Threading.Tasks.Procedures
  name: PSTk.Threading.Tasks.Procedures
  nameWithType: PSTk.Threading.Tasks.Procedures
  fullName: PSTk.Threading.Tasks.Procedures
- uid: PSTk.Threading.Tasks.InternalRoutine
  commentId: T:PSTk.Threading.Tasks.InternalRoutine
  name: InternalRoutine
  nameWithType: InternalRoutine
  fullName: PSTk.Threading.Tasks.InternalRoutine
- uid: PSTk.Threading.Tasks.InternalRoutine.#ctor*
  commentId: Overload:PSTk.Threading.Tasks.InternalRoutine.#ctor
  name: InternalRoutine
  nameWithType: InternalRoutine.InternalRoutine
  fullName: PSTk.Threading.Tasks.InternalRoutine.InternalRoutine
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Action{System.Int32}
  commentId: T:System.Action{System.Int32}
  parent: System
  definition: System.Action`1
  name: Action<Int32>
  nameWithType: Action<Int32>
  fullName: System.Action<System.Int32>
  nameWithType.vb: Action(Of Int32)
  fullName.vb: System.Action(Of System.Int32)
  name.vb: Action(Of Int32)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.String}
  commentId: T:System.Action{System.String}
  parent: System
  definition: System.Action`1
  name: Action<String>
  nameWithType: Action<String>
  fullName: System.Action<System.String>
  nameWithType.vb: Action(Of String)
  fullName.vb: System.Action(Of System.String)
  name.vb: Action(Of String)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PSTk.Threading.Tasks.InternalRoutine.timeout
  commentId: F:PSTk.Threading.Tasks.InternalRoutine.timeout
  isExternal: true
- uid: System.EventHandler{PSTk.Threading.Tasks.InternalRoutineEventArgs}
  commentId: T:System.EventHandler{PSTk.Threading.Tasks.InternalRoutineEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<InternalRoutineEventArgs>
  nameWithType: EventHandler<InternalRoutineEventArgs>
  fullName: System.EventHandler<PSTk.Threading.Tasks.InternalRoutineEventArgs>
  nameWithType.vb: EventHandler(Of InternalRoutineEventArgs)
  fullName.vb: System.EventHandler(Of PSTk.Threading.Tasks.InternalRoutineEventArgs)
  name.vb: EventHandler(Of InternalRoutineEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PSTk.Threading.Tasks.InternalRoutineEventArgs
    name: InternalRoutineEventArgs
    nameWithType: InternalRoutineEventArgs
    fullName: PSTk.Threading.Tasks.InternalRoutineEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PSTk.Threading.Tasks.InternalRoutineEventArgs
    name: InternalRoutineEventArgs
    nameWithType: InternalRoutineEventArgs
    fullName: PSTk.Threading.Tasks.InternalRoutineEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: PSTk.Threading.Tasks.InternalRoutine.Token*
  commentId: Overload:PSTk.Threading.Tasks.InternalRoutine.Token
  name: Token
  nameWithType: InternalRoutine.Token
  fullName: PSTk.Threading.Tasks.InternalRoutine.Token
- uid: PSTk.Threading.Tasks.Procedures.IAttachedTask.Token
  commentId: P:PSTk.Threading.Tasks.Procedures.IAttachedTask.Token
  parent: PSTk.Threading.Tasks.Procedures.IAttachedTask
  name: Token
  nameWithType: IAttachedTask.Token
  fullName: PSTk.Threading.Tasks.Procedures.IAttachedTask.Token
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: PSTk.Threading.Tasks.InternalRoutine.AttachToParent*
  commentId: Overload:PSTk.Threading.Tasks.InternalRoutine.AttachToParent
  name: AttachToParent
  nameWithType: InternalRoutine.AttachToParent
  fullName: PSTk.Threading.Tasks.InternalRoutine.AttachToParent
- uid: PSTk.Threading.Tasks.Procedures.IAttachedTask.AttachToParent(System.Threading.CancellationToken)
  commentId: M:PSTk.Threading.Tasks.Procedures.IAttachedTask.AttachToParent(System.Threading.CancellationToken)
  parent: PSTk.Threading.Tasks.Procedures.IAttachedTask
  isExternal: true
  name: AttachToParent(CancellationToken)
  nameWithType: IAttachedTask.AttachToParent(CancellationToken)
  fullName: PSTk.Threading.Tasks.Procedures.IAttachedTask.AttachToParent(System.Threading.CancellationToken)
  spec.csharp:
  - uid: PSTk.Threading.Tasks.Procedures.IAttachedTask.AttachToParent(System.Threading.CancellationToken)
    name: AttachToParent
    nameWithType: IAttachedTask.AttachToParent
    fullName: PSTk.Threading.Tasks.Procedures.IAttachedTask.AttachToParent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PSTk.Threading.Tasks.Procedures.IAttachedTask.AttachToParent(System.Threading.CancellationToken)
    name: AttachToParent
    nameWithType: IAttachedTask.AttachToParent
    fullName: PSTk.Threading.Tasks.Procedures.IAttachedTask.AttachToParent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationTokenSource.Cancel(System.Boolean)
  commentId: M:System.Threading.CancellationTokenSource.Cancel(System.Boolean)
  isExternal: true
- uid: PSTk.Threading.Tasks.InternalRoutine.Start*
  commentId: Overload:PSTk.Threading.Tasks.InternalRoutine.Start
  name: Start
  nameWithType: InternalRoutine.Start
  fullName: PSTk.Threading.Tasks.InternalRoutine.Start
