### YamlMime:ManagedReference
items:
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1
  commentId: T:PSTk.Threading.Tasks.Procedures.AsyncProcedure`1
  id: AsyncProcedure`1
  parent: PSTk.Threading.Tasks.Procedures
  children:
  - PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.#ctor(System.String,`0,System.Func{PSTk.Threading.Tasks.Procedures.AsyncProcedure{`0},System.String,`0,PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs{`0}},System.Action{System.String})
  - PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.AttachToParent(System.Threading.CancellationToken)
  - PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.Execute
  - PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.Name
  - PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.OnCanceled
  - PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.OnCompleted
  - PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.Token
  langs:
  - csharp
  - vb
  name: AsyncProcedure<TInput>
  nameWithType: AsyncProcedure<TInput>
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedure<TInput>
  type: Class
  source:
    remote:
      path: PSTk.Threading/Tasks/Procedures/AsyncProcedure.cs
      branch: master
      repo: https://github.com/Devwarlt/pstk-core.git
    id: AsyncProcedure
    path: ../PSTk.Threading/Tasks/Procedures/AsyncProcedure.cs
    startLine: 12
  assemblies:
  - PSTk.Threading
  namespace: PSTk.Threading.Tasks.Procedures
  summary: "\nUsed for situations that require dependency between other procedure. Recommended to use it with <xref href=\"PSTk.Threading.Tasks.Procedures.AsyncProcedurePool\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public sealed class AsyncProcedure<TInput> : IAsyncProcedure, IAttachedTask'
    typeParameters:
    - id: TInput
      description: ''
    content.vb: >-
      Public NotInheritable Class AsyncProcedure(Of TInput)

          Implements IAsyncProcedure, IAttachedTask
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
  inheritance:
  - System.Object
  implements:
  - PSTk.Threading.Tasks.Procedures.IAsyncProcedure
  - PSTk.Threading.Tasks.Procedures.IAttachedTask
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: AsyncProcedure(Of TInput)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedure(Of TInput)
  name.vb: AsyncProcedure(Of TInput)
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.#ctor(System.String,`0,System.Func{PSTk.Threading.Tasks.Procedures.AsyncProcedure{`0},System.String,`0,PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs{`0}},System.Action{System.String})
  commentId: M:PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.#ctor(System.String,`0,System.Func{PSTk.Threading.Tasks.Procedures.AsyncProcedure{`0},System.String,`0,PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs{`0}},System.Action{System.String})
  id: '#ctor(System.String,`0,System.Func{PSTk.Threading.Tasks.Procedures.AsyncProcedure{`0},System.String,`0,PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs{`0}},System.Action{System.String})'
  parent: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1
  langs:
  - csharp
  - vb
  name: AsyncProcedure(String, TInput, Func<AsyncProcedure<TInput>, String, TInput, AsyncProcedureEventArgs<TInput>>, Action<String>)
  nameWithType: AsyncProcedure<TInput>.AsyncProcedure(String, TInput, Func<AsyncProcedure<TInput>, String, TInput, AsyncProcedureEventArgs<TInput>>, Action<String>)
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedure<TInput>.AsyncProcedure(System.String, TInput, System.Func<PSTk.Threading.Tasks.Procedures.AsyncProcedure<TInput>, System.String, TInput, PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs<TInput>>, System.Action<System.String>)
  type: Constructor
  source:
    remote:
      path: PSTk.Threading/Tasks/Procedures/AsyncProcedure.cs
      branch: master
      repo: https://github.com/Devwarlt/pstk-core.git
    id: .ctor
    path: ../PSTk.Threading/Tasks/Procedures/AsyncProcedure.cs
    startLine: 24
  assemblies:
  - PSTk.Threading
  namespace: PSTk.Threading.Tasks.Procedures
  summary: "\nCreate a new instance of <xref href=\"PSTk.Threading.Tasks.Procedures.AsyncProcedure%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AsyncProcedure(string name, TInput input, Func<AsyncProcedure<TInput>, string, TInput, AsyncProcedureEventArgs<TInput>> procedure, Action<string> errorLogger = null)
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: input
      type: '{TInput}'
      description: ''
    - id: procedure
      type: System.Func{PSTk.Threading.Tasks.Procedures.AsyncProcedure`1,System.String,{TInput},PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs{{TInput}}}
      description: ''
    - id: errorLogger
      type: System.Action{System.String}
      description: ''
    content.vb: Public Sub New(name As String, input As TInput, procedure As Func(Of AsyncProcedure(Of TInput), String, TInput, AsyncProcedureEventArgs(Of TInput)), errorLogger As Action(Of String) = Nothing)
  overload: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.#ctor*
  nameWithType.vb: AsyncProcedure(Of TInput).AsyncProcedure(String, TInput, Func(Of AsyncProcedure(Of TInput), String, TInput, AsyncProcedureEventArgs(Of TInput)), Action(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedure(Of TInput).AsyncProcedure(System.String, TInput, System.Func(Of PSTk.Threading.Tasks.Procedures.AsyncProcedure(Of TInput), System.String, TInput, PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs(Of TInput)), System.Action(Of System.String))
  name.vb: AsyncProcedure(String, TInput, Func(Of AsyncProcedure(Of TInput), String, TInput, AsyncProcedureEventArgs(Of TInput)), Action(Of String))
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.OnCanceled
  commentId: E:PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.OnCanceled
  id: OnCanceled
  parent: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1
  langs:
  - csharp
  - vb
  name: OnCanceled
  nameWithType: AsyncProcedure<TInput>.OnCanceled
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedure<TInput>.OnCanceled
  type: Event
  source:
    remote:
      path: PSTk.Threading/Tasks/Procedures/AsyncProcedure.cs
      branch: master
      repo: https://github.com/Devwarlt/pstk-core.git
    id: OnCanceled
    path: ../PSTk.Threading/Tasks/Procedures/AsyncProcedure.cs
    startLine: 46
  assemblies:
  - PSTk.Threading
  namespace: PSTk.Threading.Tasks.Procedures
  summary: "\nWhen procedure is canceled by parent task via <xref href=\"System.Threading.CancellationToken\" data-throw-if-not-resolved=\"false\"></xref> and forced to stop all running processes.\n"
  example: []
  syntax:
    content: public event EventHandler<AsyncProcedureEventArgs<TInput>> OnCanceled
    return:
      type: System.EventHandler{PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs{{TInput}}}
    content.vb: Public Event OnCanceled As EventHandler(Of AsyncProcedureEventArgs(Of TInput))
  nameWithType.vb: AsyncProcedure(Of TInput).OnCanceled
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedure(Of TInput).OnCanceled
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.OnCompleted
  commentId: E:PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.OnCompleted
  id: OnCompleted
  parent: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1
  langs:
  - csharp
  - vb
  name: OnCompleted
  nameWithType: AsyncProcedure<TInput>.OnCompleted
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedure<TInput>.OnCompleted
  type: Event
  source:
    remote:
      path: PSTk.Threading/Tasks/Procedures/AsyncProcedure.cs
      branch: master
      repo: https://github.com/Devwarlt/pstk-core.git
    id: OnCompleted
    path: ../PSTk.Threading/Tasks/Procedures/AsyncProcedure.cs
    startLine: 51
  assemblies:
  - PSTk.Threading
  namespace: PSTk.Threading.Tasks.Procedures
  summary: "\nWhen procedure is completed with success.\n"
  example: []
  syntax:
    content: public event EventHandler<AsyncProcedureEventArgs<TInput>> OnCompleted
    return:
      type: System.EventHandler{PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs{{TInput}}}
    content.vb: Public Event OnCompleted As EventHandler(Of AsyncProcedureEventArgs(Of TInput))
  nameWithType.vb: AsyncProcedure(Of TInput).OnCompleted
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedure(Of TInput).OnCompleted
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.Name
  commentId: P:PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.Name
  id: Name
  parent: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: AsyncProcedure<TInput>.Name
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedure<TInput>.Name
  type: Property
  source:
    remote:
      path: PSTk.Threading/Tasks/Procedures/AsyncProcedure.cs
      branch: master
      repo: https://github.com/Devwarlt/pstk-core.git
    id: Name
    path: ../PSTk.Threading/Tasks/Procedures/AsyncProcedure.cs
    startLine: 58
  assemblies:
  - PSTk.Threading
  namespace: PSTk.Threading.Tasks.Procedures
  summary: "\nGet the name of procedure.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.Name*
  implements:
  - PSTk.Threading.Tasks.Procedures.IAsyncProcedure.Name
  nameWithType.vb: AsyncProcedure(Of TInput).Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedure(Of TInput).Name
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.Token
  commentId: P:PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.Token
  id: Token
  parent: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1
  langs:
  - csharp
  - vb
  name: Token
  nameWithType: AsyncProcedure<TInput>.Token
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedure<TInput>.Token
  type: Property
  source:
    remote:
      path: PSTk.Threading/Tasks/Procedures/AsyncProcedure.cs
      branch: master
      repo: https://github.com/Devwarlt/pstk-core.git
    id: Token
    path: ../PSTk.Threading/Tasks/Procedures/AsyncProcedure.cs
    startLine: 63
  assemblies:
  - PSTk.Threading
  namespace: PSTk.Threading.Tasks.Procedures
  summary: "\nGet the <xref href=\"System.Threading.CancellationToken\" data-throw-if-not-resolved=\"false\"></xref> of attached task.\n"
  example: []
  syntax:
    content: public CancellationToken Token { get; }
    parameters: []
    return:
      type: System.Threading.CancellationToken
    content.vb: Public ReadOnly Property Token As CancellationToken
  overload: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.Token*
  implements:
  - PSTk.Threading.Tasks.Procedures.IAttachedTask.Token
  nameWithType.vb: AsyncProcedure(Of TInput).Token
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedure(Of TInput).Token
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.AttachToParent(System.Threading.CancellationToken)
  commentId: M:PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.AttachToParent(System.Threading.CancellationToken)
  id: AttachToParent(System.Threading.CancellationToken)
  parent: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1
  langs:
  - csharp
  - vb
  name: AttachToParent(CancellationToken)
  nameWithType: AsyncProcedure<TInput>.AttachToParent(CancellationToken)
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedure<TInput>.AttachToParent(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: PSTk.Threading/Tasks/Procedures/AsyncProcedure.cs
      branch: master
      repo: https://github.com/Devwarlt/pstk-core.git
    id: AttachToParent
    path: ../PSTk.Threading/Tasks/Procedures/AsyncProcedure.cs
    startLine: 69
  assemblies:
  - PSTk.Threading
  namespace: PSTk.Threading.Tasks.Procedures
  summary: "\nAttach a process to parent in case of external task cancellation request.\n"
  example: []
  syntax:
    content: public void AttachToParent(CancellationToken token)
    parameters:
    - id: token
      type: System.Threading.CancellationToken
      description: ''
    content.vb: Public Sub AttachToParent(token As CancellationToken)
  overload: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.AttachToParent*
  implements:
  - PSTk.Threading.Tasks.Procedures.IAttachedTask.AttachToParent(System.Threading.CancellationToken)
  nameWithType.vb: AsyncProcedure(Of TInput).AttachToParent(CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedure(Of TInput).AttachToParent(System.Threading.CancellationToken)
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.Execute
  commentId: M:PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.Execute
  id: Execute
  parent: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: AsyncProcedure<TInput>.Execute()
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedure<TInput>.Execute()
  type: Method
  source:
    remote:
      path: PSTk.Threading/Tasks/Procedures/AsyncProcedure.cs
      branch: master
      repo: https://github.com/Devwarlt/pstk-core.git
    id: Execute
    path: ../PSTk.Threading/Tasks/Procedures/AsyncProcedure.cs
    startLine: 76
  assemblies:
  - PSTk.Threading
  namespace: PSTk.Threading.Tasks.Procedures
  summary: "\nExecute the procedure.\n"
  example: []
  syntax:
    content: public bool Execute()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Execute As Boolean
  overload: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.Execute*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
  implements:
  - PSTk.Threading.Tasks.Procedures.IAsyncProcedure.Execute
  nameWithType.vb: AsyncProcedure(Of TInput).Execute()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedure(Of TInput).Execute()
references:
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedurePool
  commentId: T:PSTk.Threading.Tasks.Procedures.AsyncProcedurePool
  name: AsyncProcedurePool
  nameWithType: AsyncProcedurePool
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedurePool
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.OperationCanceledException
  commentId: T:System.OperationCanceledException
  isExternal: true
- uid: PSTk.Threading.Tasks.Procedures
  commentId: N:PSTk.Threading.Tasks.Procedures
  name: PSTk.Threading.Tasks.Procedures
  nameWithType: PSTk.Threading.Tasks.Procedures
  fullName: PSTk.Threading.Tasks.Procedures
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PSTk.Threading.Tasks.Procedures.IAsyncProcedure
  commentId: T:PSTk.Threading.Tasks.Procedures.IAsyncProcedure
  parent: PSTk.Threading.Tasks.Procedures
  name: IAsyncProcedure
  nameWithType: IAsyncProcedure
  fullName: PSTk.Threading.Tasks.Procedures.IAsyncProcedure
- uid: PSTk.Threading.Tasks.Procedures.IAttachedTask
  commentId: T:PSTk.Threading.Tasks.Procedures.IAttachedTask
  parent: PSTk.Threading.Tasks.Procedures
  name: IAttachedTask
  nameWithType: IAttachedTask
  fullName: PSTk.Threading.Tasks.Procedures.IAttachedTask
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1
  commentId: T:PSTk.Threading.Tasks.Procedures.AsyncProcedure`1
  name: AsyncProcedure<TInput>
  nameWithType: AsyncProcedure<TInput>
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedure<TInput>
  nameWithType.vb: AsyncProcedure(Of TInput)
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedure(Of TInput)
  name.vb: AsyncProcedure(Of TInput)
  spec.csharp:
  - uid: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1
    name: AsyncProcedure
    nameWithType: AsyncProcedure
    fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedure
  - name: <
    nameWithType: <
    fullName: <
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1
    name: AsyncProcedure
    nameWithType: AsyncProcedure
    fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: )
    nameWithType: )
    fullName: )
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.#ctor*
  commentId: Overload:PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.#ctor
  name: AsyncProcedure
  nameWithType: AsyncProcedure<TInput>.AsyncProcedure
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedure<TInput>.AsyncProcedure
  nameWithType.vb: AsyncProcedure(Of TInput).AsyncProcedure
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedure(Of TInput).AsyncProcedure
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{TInput}'
  commentId: '!:TInput'
  definition: TInput
  name: TInput
  nameWithType: TInput
  fullName: TInput
- uid: System.Func{PSTk.Threading.Tasks.Procedures.AsyncProcedure`1,System.String,{TInput},PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs{{TInput}}}
  commentId: T:System.Func{PSTk.Threading.Tasks.Procedures.AsyncProcedure`1,System.String,`0,PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs{`0}}
  parent: System
  definition: System.Func`4
  name: Func<AsyncProcedure<TInput>, String, TInput, AsyncProcedureEventArgs<TInput>>
  nameWithType: Func<AsyncProcedure<TInput>, String, TInput, AsyncProcedureEventArgs<TInput>>
  fullName: System.Func<PSTk.Threading.Tasks.Procedures.AsyncProcedure<TInput>, System.String, TInput, PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs<TInput>>
  nameWithType.vb: Func(Of AsyncProcedure(Of TInput), String, TInput, AsyncProcedureEventArgs(Of TInput))
  fullName.vb: System.Func(Of PSTk.Threading.Tasks.Procedures.AsyncProcedure(Of TInput), System.String, TInput, PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs(Of TInput))
  name.vb: Func(Of AsyncProcedure(Of TInput), String, TInput, AsyncProcedureEventArgs(Of TInput))
  spec.csharp:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1
    name: AsyncProcedure
    nameWithType: AsyncProcedure
    fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedure
  - name: <
    nameWithType: <
    fullName: <
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1
    name: AsyncProcedureEventArgs
    nameWithType: AsyncProcedureEventArgs
    fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs
  - name: <
    nameWithType: <
    fullName: <
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1
    name: AsyncProcedure
    nameWithType: AsyncProcedure
    fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1
    name: AsyncProcedureEventArgs
    nameWithType: AsyncProcedureEventArgs
    fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.String}
  commentId: T:System.Action{System.String}
  parent: System
  definition: System.Action`1
  name: Action<String>
  nameWithType: Action<String>
  fullName: System.Action<System.String>
  nameWithType.vb: Action(Of String)
  fullName.vb: System.Action(Of System.String)
  name.vb: Action(Of String)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TInput
  name: TInput
  nameWithType: TInput
  fullName: TInput
- uid: System.Func`4
  commentId: T:System.Func`4
  isExternal: true
  name: Func<T1, T2, T3, TResult>
  nameWithType: Func<T1, T2, T3, TResult>
  fullName: System.Func<T1, T2, T3, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, TResult)
  name.vb: Func(Of T1, T2, T3, TResult)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.EventHandler{PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs{{TInput}}}
  commentId: T:System.EventHandler{PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs{`0}}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<AsyncProcedureEventArgs<TInput>>
  nameWithType: EventHandler<AsyncProcedureEventArgs<TInput>>
  fullName: System.EventHandler<PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs<TInput>>
  nameWithType.vb: EventHandler(Of AsyncProcedureEventArgs(Of TInput))
  fullName.vb: System.EventHandler(Of PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs(Of TInput))
  name.vb: EventHandler(Of AsyncProcedureEventArgs(Of TInput))
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1
    name: AsyncProcedureEventArgs
    nameWithType: AsyncProcedureEventArgs
    fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs
  - name: <
    nameWithType: <
    fullName: <
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1
    name: AsyncProcedureEventArgs
    nameWithType: AsyncProcedureEventArgs
    fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.Name*
  commentId: Overload:PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.Name
  name: Name
  nameWithType: AsyncProcedure<TInput>.Name
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedure<TInput>.Name
  nameWithType.vb: AsyncProcedure(Of TInput).Name
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedure(Of TInput).Name
- uid: PSTk.Threading.Tasks.Procedures.IAsyncProcedure.Name
  commentId: P:PSTk.Threading.Tasks.Procedures.IAsyncProcedure.Name
  parent: PSTk.Threading.Tasks.Procedures.IAsyncProcedure
  name: Name
  nameWithType: IAsyncProcedure.Name
  fullName: PSTk.Threading.Tasks.Procedures.IAsyncProcedure.Name
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.Token*
  commentId: Overload:PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.Token
  name: Token
  nameWithType: AsyncProcedure<TInput>.Token
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedure<TInput>.Token
  nameWithType.vb: AsyncProcedure(Of TInput).Token
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedure(Of TInput).Token
- uid: PSTk.Threading.Tasks.Procedures.IAttachedTask.Token
  commentId: P:PSTk.Threading.Tasks.Procedures.IAttachedTask.Token
  parent: PSTk.Threading.Tasks.Procedures.IAttachedTask
  name: Token
  nameWithType: IAttachedTask.Token
  fullName: PSTk.Threading.Tasks.Procedures.IAttachedTask.Token
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.AttachToParent*
  commentId: Overload:PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.AttachToParent
  name: AttachToParent
  nameWithType: AsyncProcedure<TInput>.AttachToParent
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedure<TInput>.AttachToParent
  nameWithType.vb: AsyncProcedure(Of TInput).AttachToParent
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedure(Of TInput).AttachToParent
- uid: PSTk.Threading.Tasks.Procedures.IAttachedTask.AttachToParent(System.Threading.CancellationToken)
  commentId: M:PSTk.Threading.Tasks.Procedures.IAttachedTask.AttachToParent(System.Threading.CancellationToken)
  parent: PSTk.Threading.Tasks.Procedures.IAttachedTask
  isExternal: true
  name: AttachToParent(CancellationToken)
  nameWithType: IAttachedTask.AttachToParent(CancellationToken)
  fullName: PSTk.Threading.Tasks.Procedures.IAttachedTask.AttachToParent(System.Threading.CancellationToken)
  spec.csharp:
  - uid: PSTk.Threading.Tasks.Procedures.IAttachedTask.AttachToParent(System.Threading.CancellationToken)
    name: AttachToParent
    nameWithType: IAttachedTask.AttachToParent
    fullName: PSTk.Threading.Tasks.Procedures.IAttachedTask.AttachToParent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PSTk.Threading.Tasks.Procedures.IAttachedTask.AttachToParent(System.Threading.CancellationToken)
    name: AttachToParent
    nameWithType: IAttachedTask.AttachToParent
    fullName: PSTk.Threading.Tasks.Procedures.IAttachedTask.AttachToParent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.Execute*
  commentId: Overload:PSTk.Threading.Tasks.Procedures.AsyncProcedure`1.Execute
  name: Execute
  nameWithType: AsyncProcedure<TInput>.Execute
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedure<TInput>.Execute
  nameWithType.vb: AsyncProcedure(Of TInput).Execute
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedure(Of TInput).Execute
- uid: PSTk.Threading.Tasks.Procedures.IAsyncProcedure.Execute
  commentId: M:PSTk.Threading.Tasks.Procedures.IAsyncProcedure.Execute
  parent: PSTk.Threading.Tasks.Procedures.IAsyncProcedure
  name: Execute()
  nameWithType: IAsyncProcedure.Execute()
  fullName: PSTk.Threading.Tasks.Procedures.IAsyncProcedure.Execute()
  spec.csharp:
  - uid: PSTk.Threading.Tasks.Procedures.IAsyncProcedure.Execute
    name: Execute
    nameWithType: IAsyncProcedure.Execute
    fullName: PSTk.Threading.Tasks.Procedures.IAsyncProcedure.Execute
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PSTk.Threading.Tasks.Procedures.IAsyncProcedure.Execute
    name: Execute
    nameWithType: IAsyncProcedure.Execute
    fullName: PSTk.Threading.Tasks.Procedures.IAsyncProcedure.Execute
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
