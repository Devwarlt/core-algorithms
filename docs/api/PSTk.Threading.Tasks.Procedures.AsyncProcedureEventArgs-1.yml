### YamlMime:ManagedReference
items:
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1
  commentId: T:PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1
  id: AsyncProcedureEventArgs`1
  parent: PSTk.Threading.Tasks.Procedures
  children:
  - PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1.#ctor(`0,System.Boolean)
  - PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1.Input
  - PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1.Result
  langs:
  - csharp
  - vb
  name: AsyncProcedureEventArgs<TInput>
  nameWithType: AsyncProcedureEventArgs<TInput>
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs<TInput>
  type: Class
  source:
    remote:
      path: PSTk.Threading/Tasks/Procedures/AsyncProcedureEventArgs.cs
      branch: master
      repo: https://github.com/Devwarlt/pstk-core.git
    id: AsyncProcedureEventArgs
    path: ../PSTk.Threading/Tasks/Procedures/AsyncProcedureEventArgs.cs
    startLine: 7
  assemblies:
  - PSTk.Threading
  namespace: PSTk.Threading.Tasks.Procedures
  summary: "\nContains result of <xref href=\"PSTk.Threading.Tasks.Procedures.AsyncProcedure%601\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: 'public sealed class AsyncProcedureEventArgs<TInput> : EventArgs'
    typeParameters:
    - id: TInput
    content.vb: >-
      Public NotInheritable Class AsyncProcedureEventArgs(Of TInput)

          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: AsyncProcedureEventArgs(Of TInput)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs(Of TInput)
  name.vb: AsyncProcedureEventArgs(Of TInput)
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1.#ctor(`0,System.Boolean)
  commentId: M:PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1.#ctor(`0,System.Boolean)
  id: '#ctor(`0,System.Boolean)'
  parent: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1
  langs:
  - csharp
  - vb
  name: AsyncProcedureEventArgs(TInput, Boolean)
  nameWithType: AsyncProcedureEventArgs<TInput>.AsyncProcedureEventArgs(TInput, Boolean)
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs<TInput>.AsyncProcedureEventArgs(TInput, System.Boolean)
  type: Constructor
  source:
    remote:
      path: PSTk.Threading/Tasks/Procedures/AsyncProcedureEventArgs.cs
      branch: master
      repo: https://github.com/Devwarlt/pstk-core.git
    id: .ctor
    path: ../PSTk.Threading/Tasks/Procedures/AsyncProcedureEventArgs.cs
    startLine: 14
  assemblies:
  - PSTk.Threading
  namespace: PSTk.Threading.Tasks.Procedures
  summary: "\nCreate a new instance of <xref href=\"PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AsyncProcedureEventArgs(TInput input, bool result)
    parameters:
    - id: input
      type: '{TInput}'
      description: ''
    - id: result
      type: System.Boolean
      description: ''
    content.vb: Public Sub New(input As TInput, result As Boolean)
  overload: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1.#ctor*
  nameWithType.vb: AsyncProcedureEventArgs(Of TInput).AsyncProcedureEventArgs(TInput, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs(Of TInput).AsyncProcedureEventArgs(TInput, System.Boolean)
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1.Input
  commentId: P:PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1.Input
  id: Input
  parent: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1
  langs:
  - csharp
  - vb
  name: Input
  nameWithType: AsyncProcedureEventArgs<TInput>.Input
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs<TInput>.Input
  type: Property
  source:
    remote:
      path: PSTk.Threading/Tasks/Procedures/AsyncProcedureEventArgs.cs
      branch: master
      repo: https://github.com/Devwarlt/pstk-core.git
    id: Input
    path: ../PSTk.Threading/Tasks/Procedures/AsyncProcedureEventArgs.cs
    startLine: 24
  assemblies:
  - PSTk.Threading
  namespace: PSTk.Threading.Tasks.Procedures
  summary: "\nThe input of <xref href=\"PSTk.Threading.Tasks.Procedures.AsyncProcedure%601\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: public TInput Input { get; }
    parameters: []
    return:
      type: '{TInput}'
    content.vb: Public ReadOnly Property Input As TInput
  overload: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1.Input*
  nameWithType.vb: AsyncProcedureEventArgs(Of TInput).Input
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs(Of TInput).Input
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1.Result
  commentId: P:PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1.Result
  id: Result
  parent: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: AsyncProcedureEventArgs<TInput>.Result
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs<TInput>.Result
  type: Property
  source:
    remote:
      path: PSTk.Threading/Tasks/Procedures/AsyncProcedureEventArgs.cs
      branch: master
      repo: https://github.com/Devwarlt/pstk-core.git
    id: Result
    path: ../PSTk.Threading/Tasks/Procedures/AsyncProcedureEventArgs.cs
    startLine: 29
  assemblies:
  - PSTk.Threading
  namespace: PSTk.Threading.Tasks.Procedures
  summary: "\nThe result of <xref href=\"PSTk.Threading.Tasks.Procedures.AsyncProcedure%601\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: public bool Result { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Result As Boolean
  overload: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1.Result*
  nameWithType.vb: AsyncProcedureEventArgs(Of TInput).Result
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs(Of TInput).Result
references:
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1
  commentId: T:PSTk.Threading.Tasks.Procedures.AsyncProcedure`1
  name: AsyncProcedure<TInput>
  nameWithType: AsyncProcedure<TInput>
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedure<TInput>
  nameWithType.vb: AsyncProcedure(Of TInput)
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedure(Of TInput)
  name.vb: AsyncProcedure(Of TInput)
  spec.csharp:
  - uid: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1
    name: AsyncProcedure
    nameWithType: AsyncProcedure
    fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedure
  - name: <
    nameWithType: <
    fullName: <
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: PSTk.Threading.Tasks.Procedures.AsyncProcedure`1
    name: AsyncProcedure
    nameWithType: AsyncProcedure
    fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: )
    nameWithType: )
    fullName: )
- uid: PSTk.Threading.Tasks.Procedures
  commentId: N:PSTk.Threading.Tasks.Procedures
  name: PSTk.Threading.Tasks.Procedures
  nameWithType: PSTk.Threading.Tasks.Procedures
  fullName: PSTk.Threading.Tasks.Procedures
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1
  commentId: T:PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1
  name: AsyncProcedureEventArgs<TInput>
  nameWithType: AsyncProcedureEventArgs<TInput>
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs<TInput>
  nameWithType.vb: AsyncProcedureEventArgs(Of TInput)
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs(Of TInput)
  name.vb: AsyncProcedureEventArgs(Of TInput)
  spec.csharp:
  - uid: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1
    name: AsyncProcedureEventArgs
    nameWithType: AsyncProcedureEventArgs
    fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs
  - name: <
    nameWithType: <
    fullName: <
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1
    name: AsyncProcedureEventArgs
    nameWithType: AsyncProcedureEventArgs
    fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: )
    nameWithType: )
    fullName: )
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1.#ctor*
  commentId: Overload:PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1.#ctor
  name: AsyncProcedureEventArgs
  nameWithType: AsyncProcedureEventArgs<TInput>.AsyncProcedureEventArgs
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs<TInput>.AsyncProcedureEventArgs
  nameWithType.vb: AsyncProcedureEventArgs(Of TInput).AsyncProcedureEventArgs
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs(Of TInput).AsyncProcedureEventArgs
- uid: '{TInput}'
  commentId: '!:TInput'
  definition: TInput
  name: TInput
  nameWithType: TInput
  fullName: TInput
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TInput
  name: TInput
  nameWithType: TInput
  fullName: TInput
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1.Input*
  commentId: Overload:PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1.Input
  name: Input
  nameWithType: AsyncProcedureEventArgs<TInput>.Input
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs<TInput>.Input
  nameWithType.vb: AsyncProcedureEventArgs(Of TInput).Input
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs(Of TInput).Input
- uid: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1.Result*
  commentId: Overload:PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs`1.Result
  name: Result
  nameWithType: AsyncProcedureEventArgs<TInput>.Result
  fullName: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs<TInput>.Result
  nameWithType.vb: AsyncProcedureEventArgs(Of TInput).Result
  fullName.vb: PSTk.Threading.Tasks.Procedures.AsyncProcedureEventArgs(Of TInput).Result
